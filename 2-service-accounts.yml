# Service Account for the "controller"
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.12.0
  name: ingress-nginx
  namespace: ingress-nginx
---

# Service Account for the "admission webhook"

# admission webhook = 
#   - validating webhook that ingress-nginx includes
#   - helps to create or update Ingress objects (unless webhook configuration is removed)
apiVersion: v1
automountServiceAccountToken: true
# AutomountServiceAccountToken indicates whether pods running as this service account should 
#   have an API token automatically mounted. Can be overridden at the pod level.
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.12.0
  name: ingress-nginx-admission
  namespace: ingress-nginx

## About Service Accounts
# https://kubernetes.io/docs/concepts/security/service-accounts/

# Use cases for Service Account
# - provide read-only access to Secrets.
# - ACL permission e.g. read, list and watch for Lease objects
# - for external service to communicate with Kubernetes API server. E.g. authenticating to cluster as part of CI/CD
# - Authenticate to private regirstry to image pull

# Using Service Account:
# 1. Create a ServiceAccount object
# 2. Grant permission using something like RBAC.
# 3. Assign ServiceAccount to Pod
